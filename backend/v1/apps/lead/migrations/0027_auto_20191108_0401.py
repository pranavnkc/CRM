# Generated by Django 2.1.3 on 2019-11-08 04:01

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lead', '0026_auto_20191108_0155'),
    ]

    operations = [
        migrations.CreateModel(
            name='LeadSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_sold', models.DateField(blank=True, null=True)),
                ('sold_as', models.CharField(choices=[('utilities expert', 'Utilities Expert'), ('mv utilities', 'MV Utilities')], max_length=30)),
                ('multi_site', models.BooleanField(default=False)),
                ('company_type', models.CharField(choices=[('limited', 'Limited'), ('sole-trader', 'Sole Trader'), ('Partnership', 'Partnership')], max_length=30)),
                ('company_reg', models.CharField(blank=True, max_length=100, null=True)),
                ('position_in_company', models.CharField(blank=True, max_length=100, null=True)),
                ('ebilling', models.BooleanField(default=False)),
                ('receive_marketing', models.BooleanField(default=False)),
                ('full_address', models.TextField()),
                ('time_at_address', models.IntegerField(blank=True, null=True)),
                ('sole_trader_dob', models.DateField(blank=True, null=True)),
                ('full_billing_address', models.TextField()),
                ('renewal_acquisition', models.CharField(choices=[('Acquisition', 'ACQUISITION'), ('Renewal', 'Renewal')], max_length=30)),
                ('new_supplier', models.CharField(choices=[('"Affect Energy"', '"Affect Energy"'), ('"Avanti Gas"', '"Avanti Gas"'), ('"Axis Energy"', '"Axis Energy"'), ('"BES Utilities"', '"BES Utilities"'), ('"Better Energy"', '"Better Energy"'), ('"BristolEnergy"', '"BristolEnergy"'), ('"British Gas"', '"British Gas"'), ('"Bulb"', '"Bulb"'), ('"Clear Business Energy"', '"Clear Business Energy"'), ('"Contract Natural Gas"', '"Contract Natural Gas"'), ('"Corona Energy"', '"Corona Energy"'), ('"Crown Gas and Power"', '"Crown Gas and Power"'), ('"daligas"', '"daligas"'), ('"Dong Energy"', '"Dong Energy"'), ('"E.On"', '"E.On"'), ('"Ecotricity"', '"Ecotricity"'), ('"EDF"', '"EDF"'), ('"Energia"', '"Energia"'), ('"Engie (Formerly GDF Suez)"', '"Engie (Formerly GDF Suez)"'), ('"Extra Energy"', '"Extra Energy"'), ('"F & S Energy"', '"F & S Energy"'), ('"Flogas"', '"Flogas"'), ('"Gazprom Energy"', '"Gazprom Energy"'), ('"GnERGY"', '"GnERGY"'), ('"Go Effortless Energy"', '"Go Effortless Energy"'), ('"Good Energy"', '"Good Energy"'), ('"Haven Power"', '"Haven Power"'), ('"Hudson Energy"', '"Hudson Energy"'), ('"LoCO2 Energy"', '"LoCO2 Energy"'), ('"MA Energy"', '"MA Energy"'), ('"Npower"', '"Npower"'), ('"Opus Energy"', '"Opus Energy"'), ('"OVO Energy"', '"OVO Energy"'), ('"Power NI"', '"Power NI"'), ('"Regent Gas"', '"Regent Gas"'), ('"Robin Hood Energy"', '"Robin Hood Energy"'), ('"ScottishPower"', '"ScottishPower"'), ('"Simple Gas"', '"Simple Gas"'), ('"Smartest Energy"', '"Smartest Energy"'), ('"SSE"', '"SSE"'), ('"Total Gas & Power"', '"Total Gas & Power"'), ('"United Gas and Power (UGP)"', '"United Gas and Power (UGP)"'), ('"Utilita Energy"', '"Utilita Energy"'), ('"Utility Warehouse"', '"Utility Warehouse"'), ('"Vattenfall"', '"Vattenfall"'), ('"Vayu Energy"', '"Vayu Energy"'), ('"Yorkshire Gas and Power (YGP)"', '"Yorkshire Gas and Power (YGP)"'), ('"Yu Energy"', '"Yu Energy"')], max_length=100)),
                ('top_row', models.CharField(blank=True, max_length=100, null=True)),
                ('bottom_row', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('days', models.IntegerField(blank=True, null=True)),
                ('eac_submitted', models.IntegerField(blank=True, null=True)),
                ('tariif_code', models.CharField(blank=True, max_length=100, null=True)),
                ('standing_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('standing_charge_uplift', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unit_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('day_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('night_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('weekday_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('eve_weekened_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('eve_weekend_night_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('uplift', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('sc_comm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('eac_comm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_comm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_comm_on_submission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('agenct_comm_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('agenct_comm_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('bill_received', models.BooleanField(blank=True, null=True)),
                ('existing_contract_cancelled', models.BooleanField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True)),
                ('account_sort_code', models.CharField(blank=True, max_length=100, null=True)),
                ('data_source', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale', to='lead.Lead')),
                ('sold_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='prospectlead',
            name='campaign',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
    ]
